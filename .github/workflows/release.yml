name: Release
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [windows-latest,ubuntu-latest]
    steps:
      - name: Set up git repository
        uses: actions/checkout@v3
      
      - name: Install Lazarus
        uses: gcarreno/setup-lazarus@v3.2
        with:
          lazarus-version: dist
          with-cache: false

      - name: Compile
        run: lazbuild src/Project1.lpi

      - name: Upload executable (windows)
        uses: actions/upload-artifact@v3
        if: ${{ matrix.operating-system == 'windows-latest' }}
        with:
          name: executable-${{ matrix.operating-system }}
          path: out/Project1.exe
          retention-days: 2

      - name: Upload executable
        uses: actions/upload-artifact@v3
        if: ${{ matrix.operating-system != 'windows-latest' }}
        with:
          name: executable-${{ matrix.operating-system }}
          path: out/Project1
          retention-days: 2

  upload:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        operating-system: [windows-latest,ubuntu-latest]
    steps:
      - name: Set up git repository
        uses: actions/checkout@v3

      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: executable-${{ matrix.operating-system }}

      - name: Bundle
        run: |
          # remove `-latest` suffix from osname
          OSNAME=${{ matrix.operating-system }}
          BUNDLEDIR=pacman-${{ github.ref_name }}-${OSNAME/-*}
          ZIPNAME="${BUNDLEDIR}.zip"

          mkdir -p "$BUNDLEDIR"
          if [ ${OSNAME/-*} == windows ] ; then
            cp Project1.exe "${BUNDLEDIR}/pacman.exe"
          else
            cp Project1 "${BUNDLEDIR}/pacman"
          fi
          cp -r gfx maps "$BUNDLEDIR"
          zip -r "${ZIPNAME}" "${BUNDLEDIR}"
          echo "ZIPNAME=$ZIPNAME" >> "$GITHUB_ENV"

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ZIPNAME }}
